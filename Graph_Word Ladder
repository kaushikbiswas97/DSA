class Pair
{
    String st;
    int cnt;
    public Pair(String st,int cnt)
    {
        this.st=st;
        this.cnt=cnt;
    }
}

class Solution {
    public int ladderLength(String beginWord, String endWord, List<String> wordList) {
        Queue<Pair> q=new LinkedList<>();
        Set<String> set=new HashSet<>();
        q.add(new Pair(beginWord,1));
        int l=wordList.size();
        for(int i=0;i<l;i++)
        {
            set.add(wordList.get(i));
        }

        while(!q.isEmpty())
        {
            String curr=q.peek().st;
            int step=q.peek().cnt;
            q.poll();
            if(curr.equals(endWord)==true)return step;
            for(int i=0;i<curr.length();i++)
            {
                for(char ch='a';ch<='z';ch++)
                {
                    char[] arr=curr.toCharArray();
                    arr[i]=ch;
                    String str=new String(arr);
                    if(set.contains(str)){
                        set.remove(str);
                        q.add(new Pair(str,step+1));
                    }
                }
            }
        }
        return 0;
    }
}
