class Solution {
    public boolean isInterleave(String s1, String s2, String s3) {
        int n1=s1.length();
        int n2=s2.length();
        int n3=s3.length();
        int[][][] dp=new int[n1+1][n2+1][n3+1];
        for(int i=0;i<=n1;i++)
        {
            for(int j=0;j<=n2;j++)
            {
                Arrays.fill(dp[i][j],-1);
            }
        }
        return solve(0,0,0,s1,s2,s3,dp);
    }
    public boolean solve(int i,int j,int k,String s1,String s2,String s3,int[][][] dp)
    {
        if(k==s3.length())
        {
            if(i==s1.length() && j==s2.length()){
                return true;
            }
            return false;
        }
        if(dp[i][j][k]!=-1)return dp[i][j][k]==1?true:false;
        boolean first=false;
        boolean sec=false;
        if(i<s1.length() && s1.charAt(i)==s3.charAt(k)){
            first=solve(i+1,j,k+1,s1,s2,s3,dp);
        }
        if(j<s2.length() && s2.charAt(j)==s3.charAt(k)){
            sec=solve(i,j+1,k+1,s1,s2,s3,dp);
        }
        dp[i][j][k]=(first || sec)?1:0;
        return first || sec;
    }
}
