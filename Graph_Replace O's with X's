//{ Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;

class GFG{
    public static void main(String args[])throws IOException
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(in.readLine());
        while(t-- > 0){
            String a[] = in.readLine().trim().split(" ");
            int n = Integer.parseInt(a[0]);
            int m = Integer.parseInt(a[1]);
            char mat[][] = new char[n][m];
            for(int i=0; i<n; i++)
            {
                String S[] = in.readLine().trim().split(" ");
                for(int j=0; j<m; j++)
                {
                    mat[i][j] = S[j].charAt(0);
                }
            }
            
            Solution ob = new Solution();
            char[][] ans = ob.fill(n, m, mat);
            for(int i = 0;i < n;i++) {
                for(int j = 0;j < m;j++) {
                    System.out.print(ans[i][j] + " ");
                }
                System.out.println();
            }
        }
    }
}
// } Driver Code Ends


//User function Template for Java

class Solution{
    static char[][] fill(int n, int m, char a[][])
    {
        // code here
        int[][] vis = new int[n][m];
        // need possible direction
        
        int dx[]={0,0,1,-1};
        int dy[]={1,-1,0,0};
        
        for(int i=0;i<m;i++)
        {
            //1st row
            if(vis[0][i]==0 && a[0][i]=='O')
            dfs(0,i,dx,dy,a,vis);
            
            //last row
            if(vis[n-1][i]==0 && a[n-1][i]=='O')
            dfs(n-1,i,dx,dy,a,vis);
        }
        
        for(int j=0;j<n;j++){
            //1st col
            if(vis[j][0]==0 && a[j][0]=='O')
            dfs(j,0,dx,dy,a,vis);
            
            // last col
            if(vis[j][m-1]==0 && a[j][m-1]=='O')
            dfs(j,m-1,dx,dy,a,vis);
        }
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(vis[i][j]==0 && a[i][j]=='O')
                a[i][j]='X';
            }
        }
        return a;
    }
    static void dfs(int row,int col,int[] dx,int[] dy,char[][] a,int[][] vis)
    {
        int r=a.length;
        int c=a[0].length;
        
        vis[row][col]=1;
        
        for(int i=0;i<4;i++)
        {
            int nr=row+dx[i];
            int nc=col+dy[i];
            
            if(nr>=0 && nc>=0 && nr<r && nc<c && vis[nr][nc]==0 && a[nr][nc]=='O')
            dfs(nr,nc,dx,dy,a,vis);
        }
    }
}
