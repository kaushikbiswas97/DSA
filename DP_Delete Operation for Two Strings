class Solution {
    public int minDistance(String word1, String word2) {
        int n=lcs(word1,word2);
        return ((word1.length()-n)+(word2.length()-n));
    }
     public int lcs(String s,String t)
    {
        int n1=s.length();
        int n2=t.length();
        int[][] dp=new int[n1][n2];
        for(int[] it:dp)
        {
            Arrays.fill(it,-1);
        }
        return solve(0,0,n1,n2,s,t,dp);
    }
    public int solve(int i,int j,int n1,int n2,String s,String t,int[][] dp)
    {
        //base case
        if(i==n1 || j==n2)return 0;
        if(dp[i][j]!=-1)return dp[i][j];
        if(s.charAt(i)==t.charAt(j)){
            return dp[i][j]=1+solve(i+1,j+1,n1,n2,s,t,dp);
        }
        return dp[i][j]=Math.max(solve(i+1,j,n1,n2,s,t,dp),solve(i,j+1,n1,n2,s,t,dp));
    }
}
